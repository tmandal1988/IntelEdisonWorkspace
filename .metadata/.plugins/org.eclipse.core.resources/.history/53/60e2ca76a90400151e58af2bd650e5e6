/*Tanmay Kumar Mandal
 * Data: 05/20/2015
 * Testing the SPI functionality
 */

#include "ADIS16485.h"
#include <signal.h>
#include <thread>

int running = 0;

void sig_handler(int signo) {
	if (signo == SIGINT) {
		printf("closing spi nicely\n");
		running = -1;
	}
}

void serialRead(void){



}

int main() {

	signal(SIGINT, sig_handler);

	thread serialReadThread(serialRead,NULL);


	mraa::Gpio* ledOut = new mraa::Gpio(48, true, false);
	if (ledOut->dir(mraa::DIR_OUT) != MRAA_SUCCESS) {
		std::cerr << "Can't set digital pin as output, exiting" << std::endl;
		return MRAA_ERROR_UNSPECIFIED;
	}

	ADIS16485* imuObject = new ADIS16485();

	if (imuObject->initializeIMU() == 0)
		return MRAA_ERROR_UNSPECIFIED;

	ledOut->write(1);

	float IMUdataLowPrecision[6] = { 0 };
	float IMUdataHighPrecision[6] = { 0 };
	float IMUdeltaDataLowPrecision[6] = { 0 };

	while (running==0) {

		imuObject->getIMUdataLowPrecision(IMUdataLowPrecision);
		printf("%g, %g, %g, %g, %g, %g \n", IMUdataLowPrecision[0],
				IMUdataLowPrecision[1], IMUdataLowPrecision[2],
				IMUdataLowPrecision[3], IMUdataLowPrecision[4],
				IMUdataLowPrecision[5]);

		imuObject->getIMUdataHighPrecision(IMUdataHighPrecision);
		printf("%g, %g, %g, %g, %g, %g \n", IMUdataHighPrecision[0],
				IMUdataHighPrecision[1], IMUdataHighPrecision[2],
				IMUdataHighPrecision[3], IMUdataHighPrecision[4],
				IMUdataHighPrecision[5]);

	}

	delete imuObject;

	return MRAA_SUCCESS;
}
